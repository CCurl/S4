S4 examples:

; To enter a comment: 
    0( here is a comment )
    ; here is another comment
  
;   if (c) { print("Yes") } else { print("No") }
    c@#("Yes")_("No")

 ; x = (a == b) ? c : d;
    a@b@=#(c@$)_(d@)x!;

; To make sure F < T
     S4 code:             %%>($)
     Forth equivalent:    OVER OVER > IF SWAP THEN
     C equivalent:        if (f > t) { int x = f; f = t; t = x; }

; To do something (in this case, execute LP) n times:
    n@ 1[LP]

; To print numbers from F to T:
    S4 code:             1 10[i@." "]
    Forth equivalent:    f t FOR I . NEXT
    C equivalent:        for (int i = F; i <= T; i)) { printf("%d ", i); }

; One way to copy N bytes from A to B (n f t--)
    N A B d! $%+ [i@ `@ d@`! d@1+d!]\

; One way to copy N longs from A to B (N A B--)
    N A B d! $%+ [i@ @ d@ ! d@4+d! i@3+i!]\

; A simple benchmark for a 100 million FOR loop:
    1000#* 100* `T$ 1[] `T$-." ms"

; A simple benchmark for a 100 million WHILE loop:
    1000#* 100* `T$ {1-} `T$-." ms"

; Define a function to display the currently defined code:
    :D `iAU`iH1-[i@`@#,';=(i@1+`@':=(13,10,))];

; To exit S4:
    `q
