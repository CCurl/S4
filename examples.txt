S4 examples:

 - To enter a comment: 
    0( here is a comment )
  
  - if (c) { xxx } else { yyy } then:
    c #(xxx #=) ~ (yyy)

 - x = (a == b) ? c : d;
    rA@ rB@ = #(rC@$#=)~(rD@) rX!

 - To conditionally define a function: 
    1( {xx "xx is defined"} )
    0( {yy "yy is not defined"} )

- To make sure N < T
     S4 code:             %%>($)
     Forth equivalent:    OVER OVER > IF SWAP THEN
     C equivalent:        if (f < t) { int x = f; f = t; t = x; }

- The general form for a FOR loop is:
    %%<($)%-1+[$    0(code)    1+$1-]

- To do something 41 times:
    S4 code:             1 41 o-1+[S   0(code here-->)#.32,0(<--code here)   1+S1-]\
    Forth equivalent:    41 BEGIN DUP . 1- DUP WHILE DROP
    C equivalent:        for (int i = 1; i <= 41; i)) { printf("%d ", i); }

- A simple benchmark for a 100 million (100ml) decrement loop:
    {ml 1000#**}                 0(define function ml)
    {n3 #100<(0.)#10<(0.).}      0(define function n3)
    {md %%/*-}                   0(define function md - MODULO)
    {el T$-1000%%/.".":md:n3}    0(define function el - ELAPSED)
    {bm T$[1-]:el

- To display the currently defined code:
    0 H@[$   #c@#,h7d=(:cr)   1+$1-]\
